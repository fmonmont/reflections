How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    it showed the changes made to the files. the removed lines were preceded by a minus.
    the lines added were preceded by a +

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    it enables me to check what changes were made and get back to a previous working version
    in case the current version has stopped working. It prevents me from loosing control of 
    my programs.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    pros: I can choose to commit whenever it makes sense and every time a working version
    cons: it is not always easy to decide when to commit as  it can be very subjective.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

   

How can you use the commands git log and git diff to view the history of files?

    git log is used to display all of the commits
    git diff is used to see changes between two commit ID

How might using version control make you more confident to make changes that
could break something?

    you know that whatever happens, you can go back to the previous commit and 
    save many hours of debugging

Now that you have your workspace set up, what do you want to try using Git for?

    	 I want to use it for my programs and my robotics work
